import java.util.Scanner;

public class Linked_List {
    static class node {
        int data;
        node next;

        node(int value) {
            data = value;
            next = null;
        }
    }

    static node head;

    // display the list
    static void printList() {
        node p = head;
        System.out.print("\n[");

        // start from the beginning
        while (p != null) {
            System.out.print(" " + p.data + " ");
            p = p.next;
        }
        System.out.print("]");
    }

    // insertion at the beginning
    static void insertAtBegin(int data) {

        // create a link
        node lk = new node(data);

        // point it to old first node
        lk.next = head;

        // point first to new first node
        head = lk;
    }

    static void deleteAtBegin() {
        head = head.next;
    }

    static void deleteNode(int key) {
        node temp = head;
        node prev = null;
        if (temp != null && temp.data == key) {
            head = temp.next;
            return;
        }

        // Find the key to be deleted
        while (temp != null && temp.data != key) {
            prev = temp;
            temp = temp.next;
        }

        // If the key is not present
        if (temp == null)
            return;

        // Remove the node
        prev.next = temp.next;
    }

    static void deleteAtEnd() {
        node linkedlist = head;
        while (linkedlist.next.next != null)
            linkedlist = linkedlist.next;
        linkedlist.next = null;
    }

    static void insertAtEnd(int data) {

        // create a link
        node lk = new node(data);
        node linkedlist = head;

        // point it to old last node
        while (linkedlist.next != null)
            linkedlist = linkedlist.next;

        // point last to new last node
        linkedlist.next = lk;
    }

    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\nMenu:");
            System.out.println("1. Insert at the beginning");
            System.out.println("2. Delete at the beginning");
            System.out.println("3. Delete at the end");
            System.out.println("4. Insert at the end");
            System.out.println("5. Delete a specific node");
            System.out.println("6. Print List");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter value to insert at the beginning: ");
                    int value = scanner.nextInt();
                    insertAtBegin(value);
                    break;
                case 2:
                    deleteAtBegin();
                    break;
                case 3:
                    deleteAtEnd();
                    break;
                case 4:
                    System.out.print("Enter value to insert at the end: ");
                    value = scanner.nextInt();
                    insertAtEnd(value);
                    break;
                case 5:
                    System.out.print("Enter value to delete: ");
                    value = scanner.nextInt();
                    deleteNode(value);
                    break;
                case 6:
                    System.out.println("Linked List:");
                    printList();
                    break;
                case 7:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 7);

        scanner.close();
    }
}
